<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta name="renderer" content="webkit" />
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" />
    <meta name="keywords" content="Editor.md,editor,Markdown Editor,Markdown" />
    <meta name="description" content="Skills Network Author IDE" />
    <title>Skills Network Editor</title>
    <link rel="stylesheet" href="/editormd/examples/css/style.css?version=3.7.5" />
    <link rel="stylesheet" href="/editormd/css/editormd.css?version=3.7.5" />
    <link rel="stylesheet" href="/public/css/custom.css?version=3.7.5" />
    <link rel="stylesheet" href="/public/css/custom_popover.css?version=3.7.5" />
    <link rel="shortcut icon" href="/public/images/SN_favicon.png" type="image/x-icon" />

    <link rel="stylesheet" href="/node_modules/bootstrap/dist/css/bootstrap.min.css?version=3.7.5">
    <script src="/public/js/comms.js?version=3.7.5"></script>
    <script defer src="/node_modules/alpinejs/dist/cdn.min.js?version=3.7.5"></script>
</head>

<body>
    <div id="layout">
    <div id="test-editormd">
        <textarea style="display:none;"># Hands-on Lab: Create a Mockup Design for a Website using Draw.io


**Estimated time needed:** 30 minutes

In this lab, we will walk through how to create a user interface for a website that shows viral videos from popular streaming platforms. The interface will help viewers by being accessible, readable, and compatible with more popular web, mobile, and tablet devices. We will also implement wireframing to show navigation between the interface screens.

Draw.io is a free and open-source website for creating charts, flowcharts, wireframes, and diagrams. The website allows users to save files locally or to a cloud service provider. A variety of file formats, such as .png, .jpeg, and .pdf are available when saving files.


## Objectives
After completing this lab, you will be able to:
- Create a user interface for a website
- Design user-friendly screens for enhanced usability
- Illustrate user navigation from wireframing screens


## Exercise 1 : Design a User Interface
In this exercise, you will design a user interface in Figma.

1. First, in your browser visit https://draw.io.



2. Next, when prompted to save diagrams, click **Decide** later.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io1.png)

3. Click the square icon in the left shape pane.



4. Draw three squares to represent the user interface for three screens.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io2.png)

5. Click the **Rectangle** in the top tool bar and create a rectangle for the top navigation bar for each of the three screens.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io3.png)

6. Next, create three more rectangles and place them towards the bottom of the design for the bottom links for our website.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io4.png)

7. Using the rectangle again, create a tall rectangle on the left side of two of the three screens. This is a left navigation bar for additional website links. These two screens will represent the home page on the left and administrative pages on the right.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io5.png)

8. Using the rectangle again, create a tall rectangle on the right side of the third screen. This represents other videos and links on the video playback interface page.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io6.png)

9. While still on the video playback screen, place a rectangle to represent the video playback area of the selected video by the user.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io7.png)

10. Next, on the home page screen, create a small, thin rectangle under the top navigation bar and to the right of the left. This area will be for different buttons representing topics of the viral videos from streaming websites such as YouTube, Vimeo, and TikTok.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io8.png)

11. In the home page screen, below the buttons area create six placeholder squares to represent different viral videos from different streaming platforms.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io9.png)

12. Next, select the line tool from the tool bar and draw a line under the bottom row of video placeholders on the home page screen. This line separates the more viral videos from the rest of the content on the website homepage.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io10.png)

13. On the administrative screen, create a square to represent the users avatar or image.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io11.png)

14. On the administrative screen, create a rectangle to represent the users information, number of subscribers, number of uploaded videos, and so on.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io12.png)

15. Lastly, in the administrative screen, add a final rectangle below the users avatar and information areas to represent the users playlists, favorite channels, and more about information.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io13.png)

## Exercise 2 : Wire the Three Screens Together
In this exercise, you will wire the screens together to represent the users navigation between screens while using the website.

1. First, select the arrow icon and wire from one of the video placeholders to the video playback screen. When a user clicks one of the six videos on the home page screen, the video playback screen is displayed with the selected video.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io14.png)

2. Next, lets add an arrow from the home page screen to the administrative page screen. When a user clicks the top right side of the top navigation bar, the administrative screen page is displayed.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io15.png)

3. Next, add another arrow from the administrative page screen to the video playback page screen. When a user clicks on a video or video playlist, the video playback screen page is displayed.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io16.png)

4. Finally, add an arrow from the video playback page screen from the left side of the top navigation bar to the home page screen for whenever a user clicks the website logo to navigate back to the website\&#x27;s home page.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io17.png)

Congratulations! You\&#x27;ve successfully completed this hands-on lab, great job. You should now be familiar with designing a user interface for a website. In addition, you learned how to wire different screens together by adding navigational pathways from and to each screen to represent users\&#x27; navigation.

## Practice Exercises


## Exercise 3 : Create and Design a Signup Screen to Allow Users to Sign Up for your Video Website

1. Click the square icon in the left shape pane.

2. Draw a square to represent the user interface for the signup screen.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io18.png)

3. Click the **Rectangle** in the top tool bar and create a rectangle for the top navigation bar of our website.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io19.png)

4. Next, create a rectangle and place it towards the bottom of the design for the bottom links for our website.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io20.png)

5. Create two rectangles and place them in the middle of the screen, the top one for the user\&#x27;s email address and the bottom one for the user\&#x27;s password.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io21.png)

6. Lastly, create and place a rounded rectangle below the email address rectangle to represent the Log in button.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io22.png)

Congratulations! You created a simple user interface for users to sign up for your video website.

## Exercise 4 : Create and Design a Login Screen to Allow Users to Contact you Using a Form

1. Click the square icon in the left shape pane.

2. Draw a square to represent the user interface for the signup screen.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io23.png)

3. Click the **Rectangle** in the top tool bar and create a rectangle for the top navigation bar of our website.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io24.png)

4. Next, create a rectangle and place it towards the bottom of the design for the bottom links for our website.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io25.png)

5. Create and add a square on the left side for listing your contact information such as phone number and important email addresses.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io26.png)

6. Next, add two rectangles for the user\&#x27;s name and email address.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io27.png)

7. Create and add a larger rectangle so the user may include any comments they may have.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io28.png)

8. Finally, create and add a rounded rectangle for the form button so the user may send their contact information and comments.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io29.png)

Congratulations! You successfully created and designed a user interface for a contact form.

## Exercise 5 : Create and Design a User Interface Screen with a Paging Feature

1. Click the square icon in the left shape pane.

2. Draw a square to represent the user interface for the signup screen.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io30.png)

3. Click the **Rectangle** in the top tool bar and create a rectangle for the top navigation bar of our website.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io31.png)

4. Next, create a rectangle and place it towards the bottom of the design for the bottom links for our website.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io32.png)

5. Create and add three squares on the left side for representing video listings on your website.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io33.png)

6. Next to the squares add three rectangles for information about each of the videos such video title, source of video, a brief description of each video.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io34.png)

7. Finally, below the last video listing add a rectangle to represent page numbering for users to click on to view other video listings.

![](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera/images/Io35.png)

Congratulations! You successfully finished adding a paging feature to your video website.


## Author(s)
Corey Leong

&lt;footer&gt; 

&lt;img align&#x3D;&quot;left&quot; src&#x3D;&quot;https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-CD0101EN-SkillsNetwork/images/SNIBMfooter.png&quot; alt&#x3D;&quot;&quot;&gt; 

&lt;/footer&gt;

&lt;!--
## Changelog
| Date | Version | Changed by | Change Description |
|------|--------|--------|---------|
| 2023-05-19 | 1.0 | Andrew Pfeiffer | Edits made |
| 2023-05-2 | 0.1 | Andrew Pfeiffer | Initial version created |

## &lt;h3 align&#x3D;&quot;center&quot;&gt; © IBM Corporation 2022. All rights reserved. &lt;h3/&gt; --&gt;

</textarea>
    </div>
</div>

<script src="/node_modules/@popperjs/core/dist/umd/popper.min.js?version=3.7.5"></script>
<script src="/node_modules/tippy.js/dist/tippy-bundle.umd.min.js?version=3.7.5"></script>

<script src="/node_modules/he/he.js?version=3.7.5"></script>
<script type="text/javascript" src="/node_modules/iframe-resizer/js/iframeResizer.contentWindow.min.js?version=3.7.5"></script>
 
<script src="/node_modules/plyr/dist/plyr.polyfilled.js?version=3.7.5"></script>
<link rel="stylesheet" href="/node_modules/plyr/dist/plyr.css?version=3.7.5" />
<link rel="stylesheet" href="public/css/custom_plyr.css?version=3.7.5" />

<script src="editormd/examples/js/jquery.min.js"></script>
<script src="editormd/editormd.js?version=3.7.5"></script>

<script src="editormd/languages/en.js"></script>

<script src="public/js/common.js?version=3.7.5"></script>
<script src="public/js/render.js?version=3.7.5"></script>

<script type="text/javascript">
    var authorEditor = $(function () {
        let metadata = he.decode('{&quot;markdown-version&quot;:&quot;v1&quot;,&quot;tool-type&quot;:&quot;instructional-lab&quot;,&quot;branch&quot;:&quot;lab-6909-instruction&quot;,&quot;version-history-start-date&quot;:&quot;2023-05-02T21:17:39Z&quot;,&quot;audio-timestamp-of-request-to-generate-wav&quot;:&quot;2025-05-01T17:56:48Z&quot;,&quot;audio-file-url&quot;:&quot;https://cf-courses-data.static.labs.skills.network/IBMSkillsNetwork-WD0201EN-Coursera/labs/Create_a_Mockup_Design_for_a_Website_using_Draw.io.md.wav&quot;,&quot;locales-url&quot;:&quot;https://cf-courses-data.static.labs.skills.network/Mv02Stg9IuD-4dGQNfyUaA/Create%20a%20Mockup%20Design%20for%20a%20Website%20using%20Draw-io-v1-locales.json&quot;}')
        injectMetadata(metadata)

        let token = findGetParameter("token");

        let LABS_BASE_URL = 'https://labs.cognitiveclass.ai';
        let asset_library_prefix_url = 'https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-WD0201EN-Coursera';
        let tool_type = "instructional-lab";
        let filename = `labs/Create_a_Mockup_Design_for_a_Website_using_Draw.io.md`;
        let audioFileUrl = `https://cf-courses-data.static.labs.skills.network/IBMSkillsNetwork-WD0201EN-Coursera/labs/Create_a_Mockup_Design_for_a_Website_using_Draw.io.md.wav`
        let localesUrl = `https://cf-courses-data.static.labs.skills.network/Mv02Stg9IuD-4dGQNfyUaA/Create%20a%20Mockup%20Design%20for%20a%20Website%20using%20Draw-io-v1-locales.json`;
        let launch_presentation_locale = ``;
        let currentTheme = localStorage.getItem("theme") || (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ? "dark" : "default");

        return authorEditor = editormd("test-editormd", "3.7.5", {
            tool_type,
            filename,
            audioFileUrl,
            localesUrl,
            width: "100%",
            //height: "100%",
            autoHeight: true,
            // mode: 'markdown',
            theme: currentTheme,
            previewTheme: currentTheme,
            editorTheme: currentTheme === "dark" ? "pastel-on-dark" : "default",
            readOnly: true,
            pluginPath: 'plugins/',
            syncScrolling: false,
            htmlDecode: 'img',
            path: 'editormd/lib/',
            watch: false,
            // markdown,
            toolbar: false,
            atLink: false,
            toc: true,
            tocm: true,
            tocDropdown: false,
            tocTitle: "Table of Contents For your lab!",
            tex: true,
            flowChart: true,
            sequenceDiagram: true,
            codeFold: true, // Doesn't do anything?
            taskList: true,
            emoji: true,
            saveMarkdownToTextarea: true,

            onresize: function () {
                $("html,body").css("overflow", "hidden");

                this.preview.css({
                    width: $(window).width(),
                    height: $(window).height()
                })

                adjustProgressBarWidth()
            },
            fixCodeBlocks: function () {
                adjustCodeBlocks(this);
            },
            onchange: function () { // called after marked finsihed its rendering
                fixEncoding(this);

                if (this.settings.tool_type != "instructional-lab") {
                    fixCustomPlugins(this, 'https://reward.skills.network/claim');
                }
            },
            onload: function () {
                $(".markdown-body").addClass("hidden")
                $("[type=\"file\"]").bind("change", function () {
                    alert($(this).val());
                    authorEditor.cm.replaceSelection($(this).val());
                    console.log($(this).val(), authorEditor);
                });

                this.fullscreen();
                this.previewing();

                setPreviewWatchToolbar(this);

                if (tool_type != "instructional-lab") {
                    fixCustomPlugins(this, 'https://reward.skills.network/claim');
                }
                else {
                    if(audioFileUrl) {
                        addAudioWidget(this, audioFileUrl);
                    }
                }

                const preferredLanguage = bcp47ToISO6391(launch_presentation_locale) || (localStorage.getItem("preferredLanguage")?.toUpperCase() || "EN");

                setTranslationContent(preferredLanguage).finally(() => {
                    this.setMarkdown(this.getMarkdown());
                    this.previewing();
                    $(".markdown-body").removeClass("hidden")
                });

                
                setAssetLibraryPrefixUrl(asset_library_prefix_url);
                //comms with UI
                setParentUrl(LABS_BASE_URL);
                establishCommsWithUI(this);
                //let the UI know that the author-ide has loaded
                requestToUI({ type: "frame_loaded" });
            }
        });
    });
</script>
</body>

<script src="/node_modules/bootstrap/dist/js/bootstrap.bundle.min.js?version=3.7.5"></script>

</html>